# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_filters.ipynb.

# %% auto 0
__all__ = ['base_path', 'processed_data_dir', 'nifty500_csv', 'get_nifty500', 'get_symbol_data', 'get_monthly_data',
           'get_weekly_data', 'filter_stocks']

# %% ../nbs/04_filters.ipynb 3
import pandas as pd
from datetime import datetime
import nbdev

# %% ../nbs/04_filters.ipynb 4
base_path = nbdev.config.get_config().lib_path

# %% ../nbs/04_filters.ipynb 5
processed_data_dir = base_path / "../Data/Bhavcopy/Processed/"
nifty500_csv = base_path / "../Data/Misc/ind_nifty500list.csv"

# %% ../nbs/04_filters.ipynb 7
def get_nifty500():
    # Get Nifty500 list
    return pd.read_csv(nifty500_csv).Symbol.to_list()

# %% ../nbs/04_filters.ipynb 8
def get_symbol_data(symbol):
    file_path = base_path / processed_data_dir / f"{symbol}.parquet"

    if not file_path.exists():
        return None
    df = pd.read_parquet(file_path)
    df['DATE'].apply(lambda x: x.strftime('%Y-%d-%m'))
    return df

# %% ../nbs/04_filters.ipynb 9
# Convert daily data to monthly data
def get_monthly_data(df):
    return df.resample('M', on='DATE').agg({'OPEN': 'first', 'HIGH': 'max', 'LOW': 'min', 'CLOSE': 'last','SYMBOL': 'first'})

# Convert daily data to weekly data
def get_weekly_data(df):
    return df.resample('W', on='DATE').agg({'OPEN': 'first', 'HIGH': 'max', 'LOW': 'min', 'CLOSE': 'last','SYMBOL': 'first'})

# %% ../nbs/04_filters.ipynb 11
def filter_stocks(symbols=None, strategy=None, days_lookback=2):
    if not symbols:
        symbols = get_nifty500()
